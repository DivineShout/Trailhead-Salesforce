@RestResource(urlMapping = '/Animal__c/*')
global with sharing class AnimalRestResource {
	
    @HttpGet
    global static void doGet() {
        RestRequest request = RestContext.request;
        RestResponse response = RestContext.response;
        
        String animalIdAnimalString = request.requestURI.substring(request.requestURI.lastIndexOf('/')+1);
        Decimal IdAnimal = Decimal.valueOf(animalIdAnimalString);
        
        List<Animal__c> result = [SELECT Id, Name, ID__c, Eats__c, Says__c  FROM Animal__c WHERE ID__c = :IdAnimal];
        
        if (result.size() > 0) {
        	String animalString = JSON.serialize(result.get(0));
        	Blob animalBlob = Blob.valueof(animalString);
        	response.responseBody = animalBlob;
        	response.statusCode = 200;
        }   
        
        if (result.size() == 0) {
            Animal.createAnimalById((Integer) IdAnimal);
        	result = [SELECT Id, Name, ID__c, Eats__c, Says__c  FROM Animal__c WHERE ID__c = :IdAnimal];    
            if (result.size() > 0) {
                String animalString = JSON.serialize(result.get(0));
        		Blob animalBlob = Blob.valueof(animalString);
        		response.responseBody = animalBlob;
        		response.statusCode = 200;
            }else {
            	response.statusCode = 404;
            }
        }
        
        CustomLog.createCustomLog(response, request.requestURI);
    }
    
}
