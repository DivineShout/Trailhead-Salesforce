public class CustomLog {
	
    private static Map<Integer, String> statusCodeDescriptionMap = new Map<Integer, String>{
        																	200 => 'OK',
                                                                            404 => 'NOT_FOUND'};
    
    public static Custom_Log__c createCustomLog(RestResponse response, String requestURI) {
    	
        DateTime currentDT = DateTime.now();
    	Custom_Log__c clog = new Custom_Log__c(Name = requestURI + currentDT, Time__c = currentDT);
        
        clog.Status_Code__c = response.statusCode;
        clog.Status_Description__c = statusCodeDescriptionMap.get(response.statusCode);
        fillCustomLogHeaders(clog, response.headers);
        
        if(response.responseBody != null) {
            clog.Response_Body__c = response.responseBody.toString();
        }
        
        insert clog;        
        return clog;
        
    } 
    
    private static void fillCustomLogHeaders(Custom_Log__c clog, Map<String, String> headers) {
        
        String template = '{0} : {1} /n';
        String headersString = '';
        List<Object> parameters;
        for(String key : headers.keySet()) {
        	parameters = new List<Object> {key, headers.get(key)};
            headersString = headersString + String.format(template, parameters);
        }
		clog.Headers__c = headersString;
    }
    
}
